// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// File
    /// </summary>
    public partial class File
    {
        /// <summary>
        /// Initializes a new instance of the File class.
        /// </summary>
        public File()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the File class.
        /// </summary>
        /// <param name="kind">Possible values include: 'DataImportReport',
        /// 'AudioFile', 'LanguageDataUserInput', 'LanguageDataImportResult',
        /// 'PronunciationDataUserInput', 'PronunciationDataImportResult',
        /// 'AcousticDataUserInputAudioFiles',
        /// 'AcousticDataUserInputIndexFile', 'AcousticDataImportReport',
        /// 'AcousticDataNormalizedAudioFiles',
        /// 'AcousticDataNormalizedIndexFile',
        /// 'AcousticDataNormalizedTranscription', 'TranscriptionResult',
        /// 'TranscriptionV21Result',
        /// 'TranscriptionV21NormalizedDisplayResult',
        /// 'TranscriptionOutputFile', 'TranscriptionResultsZip',
        /// 'AccuracyTestReferenceFile', 'AccuracyTestResult',
        /// 'ScoringSummaryFile', 'ScoringDetailsFile', 'ScoringMapping',
        /// 'DeploymentDataExportResult', 'SpeechModelFile', 'ReportFile',
        /// 'LogAudio', 'LogTranscription'</param>
        /// <param name="properties">The custom properties of this
        /// entity</param>
        /// <param name="self">The location of this entity</param>
        public File(string kind = default(string), long? size = default(long?), string name = default(string), string url = default(string), IDictionary<string, string> properties = default(IDictionary<string, string>), string self = default(string))
        {
            Kind = kind;
            Size = size;
            Name = name;
            Url = url;
            Properties = properties;
            Self = self;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets possible values include: 'DataImportReport', 'AudioFile',
        /// 'LanguageDataUserInput', 'LanguageDataImportResult',
        /// 'PronunciationDataUserInput', 'PronunciationDataImportResult',
        /// 'AcousticDataUserInputAudioFiles',
        /// 'AcousticDataUserInputIndexFile', 'AcousticDataImportReport',
        /// 'AcousticDataNormalizedAudioFiles',
        /// 'AcousticDataNormalizedIndexFile',
        /// 'AcousticDataNormalizedTranscription', 'TranscriptionResult',
        /// 'TranscriptionV21Result',
        /// 'TranscriptionV21NormalizedDisplayResult',
        /// 'TranscriptionOutputFile', 'TranscriptionResultsZip',
        /// 'AccuracyTestReferenceFile', 'AccuracyTestResult',
        /// 'ScoringSummaryFile', 'ScoringDetailsFile', 'ScoringMapping',
        /// 'DeploymentDataExportResult', 'SpeechModelFile', 'ReportFile',
        /// 'LogAudio', 'LogTranscription'
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public long? Size { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; private set; }

        /// <summary>
        /// Gets or sets the custom properties of this entity
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// Gets the location of this entity
        /// </summary>
        [JsonProperty(PropertyName = "self")]
        public string Self { get; private set; }

    }
}
