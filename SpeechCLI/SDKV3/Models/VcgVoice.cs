// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// VcgVoice
    /// </summary>
    public partial class VcgVoice
    {
        /// <summary>
        /// Initializes a new instance of the VcgVoice class.
        /// </summary>
        public VcgVoice()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VcgVoice class.
        /// </summary>
        /// <param name="id">The identifier of this entity</param>
        /// <param name="name">The name of the object</param>
        /// <param name="locale">The locale of the contained data</param>
        /// <param name="voiceType">Possible values include: 'None',
        /// 'StandardVoice', 'SpecialCustomVoice', 'OwnTypicalCustomVoice',
        /// 'OtherTypicalCustomVoice', 'OwnBatchVoice', 'All'</param>
        /// <param name="description">The description of the object</param>
        /// <param name="properties">The custom properties of this
        /// entity</param>
        public VcgVoice(System.Guid id, string name, string locale, string voiceType = default(string), string description = default(string), IDictionary<string, string> properties = default(IDictionary<string, string>))
        {
            VoiceType = voiceType;
            Id = id;
            Name = name;
            Description = description;
            Locale = locale;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'None', 'StandardVoice',
        /// 'SpecialCustomVoice', 'OwnTypicalCustomVoice',
        /// 'OtherTypicalCustomVoice', 'OwnBatchVoice', 'All'
        /// </summary>
        [JsonProperty(PropertyName = "voiceType")]
        public string VoiceType { get; set; }

        /// <summary>
        /// Gets or sets the identifier of this entity
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the name of the object
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the description of the object
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the locale of the contained data
        /// </summary>
        [JsonProperty(PropertyName = "locale")]
        public string Locale { get; set; }

        /// <summary>
        /// Gets or sets the custom properties of this entity
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Locale == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Locale");
            }
        }
    }
}
