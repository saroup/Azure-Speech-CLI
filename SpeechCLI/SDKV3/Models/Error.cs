// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Error
    /// </summary>
    public partial class Error
    {
        /// <summary>
        /// Initializes a new instance of the Error class.
        /// </summary>
        public Error()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Error class.
        /// </summary>
        /// <param name="code">Possible values include: 'InvalidRequest',
        /// 'InvalidArgument', 'InternalServerError', 'ServiceUnavailable',
        /// 'NotFound', 'PipelineError', 'Conflict',
        /// 'InternalCommunicationFailed', 'Forbidden', 'NotAllowed',
        /// 'Unauthorized', 'UnsupportedMediaType'</param>
        public Error(string code = default(string), IList<Error> details = default(IList<Error>), string message = default(string), string target = default(string), InnerError innerError = default(InnerError))
        {
            Code = code;
            Details = details;
            Message = message;
            Target = target;
            InnerError = innerError;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'InvalidRequest',
        /// 'InvalidArgument', 'InternalServerError', 'ServiceUnavailable',
        /// 'NotFound', 'PipelineError', 'Conflict',
        /// 'InternalCommunicationFailed', 'Forbidden', 'NotAllowed',
        /// 'Unauthorized', 'UnsupportedMediaType'
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "details")]
        public IList<Error> Details { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public string Target { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "innerError")]
        public InnerError InnerError { get; set; }

    }
}
