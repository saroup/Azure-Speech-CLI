// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// AnalyticsSummaryParameters
    /// </summary>
    public partial class AnalyticsSummaryParameters
    {
        /// <summary>
        /// Initializes a new instance of the AnalyticsSummaryParameters class.
        /// </summary>
        public AnalyticsSummaryParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AnalyticsSummaryParameters class.
        /// </summary>
        public AnalyticsSummaryParameters(string locale = default(string), string endpointId = default(string), System.DateTime? dateFrom = default(System.DateTime?), System.DateTime? dateTo = default(System.DateTime?), IList<IAnalyticsDurationGroup> durationGroups = default(IList<IAnalyticsDurationGroup>))
        {
            Locale = locale;
            EndpointId = endpointId;
            DateFrom = dateFrom;
            DateTo = dateTo;
            DurationGroups = durationGroups;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locale")]
        public string Locale { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endpointId")]
        public string EndpointId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateFrom")]
        public System.DateTime? DateFrom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateTo")]
        public System.DateTime? DateTo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "durationGroups")]
        public IList<IAnalyticsDurationGroup> DurationGroups { get; set; }

    }
}
