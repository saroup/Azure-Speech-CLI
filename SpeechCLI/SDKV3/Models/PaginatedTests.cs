// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// PaginatedTests
    /// </summary>
    public partial class PaginatedTests
    {
        /// <summary>
        /// Initializes a new instance of the PaginatedTests class.
        /// </summary>
        public PaginatedTests()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PaginatedTests class.
        /// </summary>
        /// <param name="values">A list of entities limited by either the
        /// passed query parameters 'skip' and 'top' or their default values.
        /// &amp;lt;br&amp;gt;
        /// When iterating through a list using pagination and delete entities
        /// in parallel, some entities will be skipped in the results.
        /// It's recommended to build a list on the client and delete after the
        /// fetching of the complete list</param>
        /// <param name="nextLink">A link to the next set of paginated results
        /// if there are more entities available; otherwise null</param>
        public PaginatedTests(IList<AccuracyTest> values = default(IList<AccuracyTest>), string nextLink = default(string))
        {
            Values = values;
            NextLink = nextLink;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a list of entities limited by either the passed query
        /// parameters 'skip' and 'top' or their default values.
        /// &amp;amp;lt;br&amp;amp;gt;
        /// When iterating through a list using pagination and delete entities
        /// in parallel, some entities will be skipped in the results.
        /// It's recommended to build a list on the client and delete after the
        /// fetching of the complete list
        /// </summary>
        [JsonProperty(PropertyName = "values")]
        public IList<AccuracyTest> Values { get; private set; }

        /// <summary>
        /// Gets a link to the next set of paginated results if there are more
        /// entities available; otherwise null
        /// </summary>
        [JsonProperty(PropertyName = "@nextLink")]
        public string NextLink { get; private set; }

    }
}
