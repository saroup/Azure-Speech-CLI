// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Voice
    /// </summary>
    public partial class Voice
    {
        /// <summary>
        /// Initializes a new instance of the Voice class.
        /// </summary>
        public Voice()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Voice class.
        /// </summary>
        /// <param name="gender">Possible values include: 'None', 'Male',
        /// 'Female'</param>
        public Voice(string locale = default(string), string name = default(string), string description = default(string), System.Guid? id = default(System.Guid?), string gender = default(string), bool? isPublicVoice = default(bool?), System.DateTime? created = default(System.DateTime?))
        {
            Locale = locale;
            Name = name;
            Description = description;
            Id = id;
            Gender = gender;
            IsPublicVoice = isPublicVoice;
            Created = created;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locale")]
        public string Locale { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Male', 'Female'
        /// </summary>
        [JsonProperty(PropertyName = "gender")]
        public string Gender { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isPublicVoice")]
        public bool? IsPublicVoice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "created")]
        public System.DateTime? Created { get; set; }

    }
}
