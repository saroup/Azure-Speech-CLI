// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// EndpointUpdate
    /// </summary>
    public partial class EndpointUpdate
    {
        /// <summary>
        /// Initializes a new instance of the EndpointUpdate class.
        /// </summary>
        public EndpointUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EndpointUpdate class.
        /// </summary>
        /// <param name="modelsProperty">Information about the deployed
        /// models</param>
        /// <param name="endpointProperties">Additional configuration options
        /// when updating an endpoint</param>
        /// <param name="project">The project, the dataset is associated
        /// with</param>
        /// <param name="displayName">The name of the object</param>
        /// <param name="description">The description of the object</param>
        public EndpointUpdate(IList<EntityReference> modelsProperty = default(IList<EntityReference>), EndpointProperties endpointProperties = default(EndpointProperties), EntityReference project = default(EntityReference), string displayName = default(string), string description = default(string))
        {
            ModelsProperty = modelsProperty;
            EndpointProperties = endpointProperties;
            Project = project;
            DisplayName = displayName;
            Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets information about the deployed models
        /// </summary>
        [JsonProperty(PropertyName = "models")]
        public IList<EntityReference> ModelsProperty { get; set; }

        /// <summary>
        /// Gets or sets additional configuration options when updating an
        /// endpoint
        /// </summary>
        [JsonProperty(PropertyName = "endpointProperties")]
        public EndpointProperties EndpointProperties { get; set; }

        /// <summary>
        /// Gets or sets the project, the dataset is associated with
        /// </summary>
        [JsonProperty(PropertyName = "project")]
        public EntityReference Project { get; set; }

        /// <summary>
        /// Gets or sets the name of the object
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the description of the object
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ModelsProperty != null)
            {
                foreach (var element in ModelsProperty)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (Project != null)
            {
                Project.Validate();
            }
        }
    }
}
