// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// EndpointProperties
    /// </summary>
    public partial class EndpointProperties
    {
        /// <summary>
        /// Initializes a new instance of the EndpointProperties class.
        /// </summary>
        public EndpointProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EndpointProperties class.
        /// </summary>
        /// <param name="contentLoggingEnabled">A value indicating whether
        /// content logging (audio &amp;amp; transcriptions) is being used for
        /// a deployment</param>
        /// <param name="timeToLive">How long the endpoint will be kept in the
        /// system</param>
        /// <param name="email">The email address to send email notifications
        /// to in case the operation completes.
        /// The value will be removed after successfully sending the
        /// email</param>
        public EndpointProperties(bool? contentLoggingEnabled = default(bool?), string timeToLive = default(string), string email = default(string))
        {
            ContentLoggingEnabled = contentLoggingEnabled;
            TimeToLive = timeToLive;
            Email = email;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a value indicating whether content logging (audio
        /// &amp;amp;amp; transcriptions) is being used for a deployment
        /// </summary>
        [JsonProperty(PropertyName = "contentLoggingEnabled")]
        public bool? ContentLoggingEnabled { get; set; }

        /// <summary>
        /// Gets or sets how long the endpoint will be kept in the system
        /// </summary>
        [JsonProperty(PropertyName = "timeToLive")]
        public string TimeToLive { get; set; }

        /// <summary>
        /// Gets or sets the email address to send email notifications to in
        /// case the operation completes.
        /// The value will be removed after successfully sending the email
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

    }
}
