// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// LanguageDataDefinitionV3
    /// </summary>
    public partial class LanguageDataDefinitionV3
    {
        /// <summary>
        /// Initializes a new instance of the LanguageDataDefinitionV3 class.
        /// </summary>
        public LanguageDataDefinitionV3()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LanguageDataDefinitionV3 class.
        /// </summary>
        /// <param name="phoneSetTypes">Possible values include: 'None',
        /// 'Sapi', 'Ups', 'Ipa', 'Tts', 'All'</param>
        public LanguageDataDefinitionV3(string locale, string phoneSetTypes)
        {
            Locale = locale;
            PhoneSetTypes = phoneSetTypes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locale")]
        public string Locale { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Sapi', 'Ups', 'Ipa',
        /// 'Tts', 'All'
        /// </summary>
        [JsonProperty(PropertyName = "phoneSetTypes")]
        public string PhoneSetTypes { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Locale == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Locale");
            }
            if (PhoneSetTypes == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PhoneSetTypes");
            }
        }
    }
}
