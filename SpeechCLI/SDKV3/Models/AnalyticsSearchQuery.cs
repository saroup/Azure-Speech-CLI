// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// AnalyticsSearchQuery
    /// </summary>
    public partial class AnalyticsSearchQuery
    {
        /// <summary>
        /// Initializes a new instance of the AnalyticsSearchQuery class.
        /// </summary>
        public AnalyticsSearchQuery()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AnalyticsSearchQuery class.
        /// </summary>
        public AnalyticsSearchQuery(string query = default(string), string logId = default(string), string locale = default(string), string endpointId = default(string), System.DateTime? dateFrom = default(System.DateTime?), System.DateTime? dateTo = default(System.DateTime?), int? skip = default(int?), int? top = default(int?), string orderBy = default(string))
        {
            Query = query;
            LogId = logId;
            Locale = locale;
            EndpointId = endpointId;
            DateFrom = dateFrom;
            DateTo = dateTo;
            Skip = skip;
            Top = top;
            OrderBy = orderBy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "query")]
        public string Query { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logId")]
        public string LogId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locale")]
        public string Locale { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endpointId")]
        public string EndpointId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateFrom")]
        public System.DateTime? DateFrom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateTo")]
        public System.DateTime? DateTo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "skip")]
        public int? Skip { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "top")]
        public int? Top { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderBy")]
        public string OrderBy { get; set; }

    }
}
