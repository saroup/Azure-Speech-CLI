// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// SplitSsmlOrPlainTextFileOptionsDefinitionV3
    /// </summary>
    public partial class SplitSsmlOrPlainTextFileOptionsDefinitionV3
    {
        /// <summary>
        /// Initializes a new instance of the
        /// SplitSsmlOrPlainTextFileOptionsDefinitionV3 class.
        /// </summary>
        public SplitSsmlOrPlainTextFileOptionsDefinitionV3()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// SplitSsmlOrPlainTextFileOptionsDefinitionV3 class.
        /// </summary>
        /// <param name="mode">Possible values include: 'None',
        /// 'OneLinePerSegment', 'FirstLineRegexPatternOfSegment'</param>
        /// <param name="splitSsmlByContentMode">Possible values include:
        /// 'None', 'OneLinePerSegment',
        /// 'FirstLineRegexPatternOfSegment'</param>
        /// <param name="ssmlMaxCharLengthOfPlainTextPerSegmentMode">Possible
        /// values include: 'None', 'Customized',
        /// 'SsmlFileMaxPlainTextCharLength',
        /// 'SpeakMaxPlainTextCharLengthAutoDetectLanguageFromSsml',
        /// 'SpeakMaxPlainTextCharLengthForCharBasedLanguage',
        /// 'SpeakMaxPlainTextCharLengthForWordBasedLanguage'</param>
        /// <param name="splitSsmlByVoiceNameGroupsMode">Possible values
        /// include: 'None', 'GroupVoiceNamesByRealtimeEndpoint',
        /// 'GroupVoiceNamesByExportAudioEndpoint'</param>
        public SplitSsmlOrPlainTextFileOptionsDefinitionV3(string sessionFirstLineRegexPattern = default(string), string mode = default(string), string splitSsmlByContentMode = default(string), string ssmlMaxCharLengthOfPlainTextPerSegmentMode = default(string), string splitSsmlByVoiceNameGroupsMode = default(string), int? maxCharLengthOfPlainTextPerSegment = default(int?))
        {
            SessionFirstLineRegexPattern = sessionFirstLineRegexPattern;
            Mode = mode;
            SplitSsmlByContentMode = splitSsmlByContentMode;
            SsmlMaxCharLengthOfPlainTextPerSegmentMode = ssmlMaxCharLengthOfPlainTextPerSegmentMode;
            SplitSsmlByVoiceNameGroupsMode = splitSsmlByVoiceNameGroupsMode;
            MaxCharLengthOfPlainTextPerSegment = maxCharLengthOfPlainTextPerSegment;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sessionFirstLineRegexPattern")]
        public string SessionFirstLineRegexPattern { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'OneLinePerSegment',
        /// 'FirstLineRegexPatternOfSegment'
        /// </summary>
        [JsonProperty(PropertyName = "mode")]
        public string Mode { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'OneLinePerSegment',
        /// 'FirstLineRegexPatternOfSegment'
        /// </summary>
        [JsonProperty(PropertyName = "splitSsmlByContentMode")]
        public string SplitSsmlByContentMode { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Customized',
        /// 'SsmlFileMaxPlainTextCharLength',
        /// 'SpeakMaxPlainTextCharLengthAutoDetectLanguageFromSsml',
        /// 'SpeakMaxPlainTextCharLengthForCharBasedLanguage',
        /// 'SpeakMaxPlainTextCharLengthForWordBasedLanguage'
        /// </summary>
        [JsonProperty(PropertyName = "ssmlMaxCharLengthOfPlainTextPerSegmentMode")]
        public string SsmlMaxCharLengthOfPlainTextPerSegmentMode { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None',
        /// 'GroupVoiceNamesByRealtimeEndpoint',
        /// 'GroupVoiceNamesByExportAudioEndpoint'
        /// </summary>
        [JsonProperty(PropertyName = "splitSsmlByVoiceNameGroupsMode")]
        public string SplitSsmlByVoiceNameGroupsMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maxCharLengthOfPlainTextPerSegment")]
        public int? MaxCharLengthOfPlainTextPerSegment { get; set; }

    }
}
