// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// AnalyticsSummaryResult
    /// </summary>
    public partial class AnalyticsSummaryResult
    {
        /// <summary>
        /// Initializes a new instance of the AnalyticsSummaryResult class.
        /// </summary>
        public AnalyticsSummaryResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AnalyticsSummaryResult class.
        /// </summary>
        /// <param name="existsLog">A value indicating whether log
        /// exists</param>
        /// <param name="dailyTransactions">DailyTransactions</param>
        /// <param name="durationDistributions">DurationDistributions</param>
        public AnalyticsSummaryResult(bool? existsLog = default(bool?), IList<IAnalyticsSummaryItem> dailyTransactions = default(IList<IAnalyticsSummaryItem>), IList<IAnalyticsSummaryItem> durationDistributions = default(IList<IAnalyticsSummaryItem>))
        {
            ExistsLog = existsLog;
            DailyTransactions = dailyTransactions;
            DurationDistributions = durationDistributions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a value indicating whether log exists
        /// </summary>
        [JsonProperty(PropertyName = "existsLog")]
        public bool? ExistsLog { get; set; }

        /// <summary>
        /// Gets or sets dailyTransactions
        /// </summary>
        [JsonProperty(PropertyName = "dailyTransactions")]
        public IList<IAnalyticsSummaryItem> DailyTransactions { get; set; }

        /// <summary>
        /// Gets or sets durationDistributions
        /// </summary>
        [JsonProperty(PropertyName = "durationDistributions")]
        public IList<IAnalyticsSummaryItem> DurationDistributions { get; set; }

    }
}
