// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// SsmlTagParameterMetadataResponseV3
    /// </summary>
    public partial class SsmlTagParameterMetadataResponseV3
    {
        /// <summary>
        /// Initializes a new instance of the
        /// SsmlTagParameterMetadataResponseV3 class.
        /// </summary>
        public SsmlTagParameterMetadataResponseV3()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// SsmlTagParameterMetadataResponseV3 class.
        /// </summary>
        /// <param name="valueType">Possible values include: 'None',
        /// 'StringValue', 'IntValue', 'DoubleValue', 'BoolValue',
        /// 'EnumValue'</param>
        public SsmlTagParameterMetadataResponseV3(string name = default(string), string valueType = default(string), bool? isRequired = default(bool?), string min = default(string), string max = default(string), IList<string> supportedValues = default(IList<string>))
        {
            Name = name;
            ValueType = valueType;
            IsRequired = isRequired;
            Min = min;
            Max = max;
            SupportedValues = supportedValues;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'StringValue',
        /// 'IntValue', 'DoubleValue', 'BoolValue', 'EnumValue'
        /// </summary>
        [JsonProperty(PropertyName = "valueType")]
        public string ValueType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isRequired")]
        public bool? IsRequired { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "min")]
        public string Min { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "max")]
        public string Max { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supportedValues")]
        public IList<string> SupportedValues { get; set; }

    }
}
