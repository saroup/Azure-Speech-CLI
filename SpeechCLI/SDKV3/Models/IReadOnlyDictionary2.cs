// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Speech.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class IReadOnlyDictionary2
    {
        /// <summary>
        /// Initializes a new instance of the IReadOnlyDictionary2 class.
        /// </summary>
        public IReadOnlyDictionary2()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IReadOnlyDictionary2 class.
        /// </summary>
        public IReadOnlyDictionary2(IList<string> none = default(IList<string>), IList<string> language = default(IList<string>), IList<string> acoustic = default(IList<string>), IList<string> pronunciation = default(IList<string>), IList<string> customVoice = default(IList<string>), IList<string> audioFiles = default(IList<string>), IList<string> keywordAudioTranscript = default(IList<string>))
        {
            None = none;
            Language = language;
            Acoustic = acoustic;
            Pronunciation = pronunciation;
            CustomVoice = customVoice;
            AudioFiles = audioFiles;
            KeywordAudioTranscript = keywordAudioTranscript;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "None")]
        public IList<string> None { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Language")]
        public IList<string> Language { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Acoustic")]
        public IList<string> Acoustic { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Pronunciation")]
        public IList<string> Pronunciation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CustomVoice")]
        public IList<string> CustomVoice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AudioFiles")]
        public IList<string> AudioFiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "KeywordAudioTranscript")]
        public IList<string> KeywordAudioTranscript { get; set; }

    }
}
